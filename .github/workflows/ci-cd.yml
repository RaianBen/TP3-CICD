name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest

  # Stage de build Docker
  build:
    name: Build Docker image
    needs: test 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  
      - name: Build Docker image
        run: |
          docker build -t achiro/application_python:${{ github.sha }} .
      - name: Push Docker image to Docker Hub
        run: |
          docker push achiro/application_python:${{ github.sha }}

  # Stage de déploiement sur GCP
  deploy:
    name: Deploy to GCP Kubernetes
    needs: [build, test]  # Dépendance aux jobs test et build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authentification avec Google Cloud SDK (GCS)
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1  # Utilisation de l'action officielle
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}  # Fichier clé de service JSON

      # Configuration de Docker pour Google Container Registry
      - name: Configure Docker for GCP
        run: |
          gcloud auth configure-docker

      # Taguer l'image Docker pour GCP
      - name: Tag Docker image for GCP
        run: |
          docker tag achiro/application_python:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/application_python:${{ github.sha }}

      # Pousser l'image vers Google Container Registry
      - name: Push Docker image to GCP
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/application_python:${{ github.sha }}

      # Obtenir les informations de cluster Kubernetes
      - name: Get Kubernetes cluster credentials
        run: |
          gcloud container clusters get-credentials non-cluster \
            --zone europe-central2 \
            --project ${{ secrets.GCP_PROJECT_ID }}

      # Déployer les ressources Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
